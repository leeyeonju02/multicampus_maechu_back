<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.multipjt.multi_pjt.community.dao.PostMapper">

    <!-- 게시물 등록 -->
    <insert id="postInsert"  parameterType="com.multipjt.multi_pjt.community.domain.posts.PostRequestDTO">
        INSERT INTO Posts (
            post_title,
            post_contents,
            post_sport,
            post_sports_keyword,
            member_id
            <if test="post_hashtag != null and post_hashtag != ''">
                , post_hashtag
            </if>
            <if test="post_img1 != null and post_img1 != ''">
                , post_img1
            </if>
            <if test="post_img2 != null and post_img2 != ''">
                , post_img2
            </if>
          
        ) VALUES (
            #{post_title},
            #{post_contents},
            #{post_sport},
            #{post_sports_keyword},
            #{member_id}
            <if test="post_hashtag != null and post_hashtag != ''">
                , #{post_hashtag}
            </if>
            <if test="post_img1 != null and post_img1 != ''">
                , #{post_img1}
            </if>
            <if test="post_img2 != null and post_img2 != ''">
                , #{post_img2}
            </if>
        );
    </insert>

    <!-- 게시글 member_id로 조회 -->
    <select id ="getMemberById" parameterType="int"  resultType="com.multipjt.multi_pjt.community.domain.posts.PostResponseDTO">
        SELECT * 
        FROM Posts 
        WHERE member_id= #{member_id}
    </select>

    <!-- 게시글 수정 -->
    <update id="postUpdate" parameterType="com.multipjt.multi_pjt.community.domain.posts.PostRequestDTO" >  
        UPDATE Posts
        SET  
            <if test="post_title != null and post_title != ''">
                post_title = #{post_title}
            </if>
            <if test="post_img2 != null and post_img2 != ''">
                , post_contents = #{post_contents}
            </if>
            <if test="post_title != null and post_title != ''">
                , post_sport = #{post_sport}
            </if>
            <if test="post_img2 != null and post_img2 != ''">
                , post_sports_keyword = #{post_sports_keyword}
            </if>
            <if test="post_title != null and post_title != ''">
                , post_img1 = #{post_img1}
            </if>
            <if test="post_img2 != null and post_img2 != ''">
                , post_img2 = #{post_img2}
            </if>
             <if test="post_img2 != null and post_img2 != ''">
                , post_hashtag = #{post_hashtag}
            </if>
            , post_modify_date = now()
        WHERE
            post_id = #{post_id} 
            AND    member_id = #{member_id} 
    </update>

    <!-- post_id로 게시글 조회 -->
    <select id ="getPostById" parameterType="int"  resultType="com.multipjt.multi_pjt.community.domain.posts.PostResponseDTO">
        SELECT * 
        FROM Posts 
        WHERE post_id= #{post_id}
    </select>

    <!-- 운동 종목 별 게시글 조회 -->
    <select id="postSelectSport" parameterType="String" resultType="com.multipjt.multi_pjt.community.domain.posts.PostResponseDTO">
        SELECT 
            p.post_id,
            post_title,
            post_contents,
            post_sport,
            post_sports_keyword,
            post_like_counts,
            post_views,
            post_date,
            p.member_id,
            m.nickname,
            COUNT(c.comments_id) AS comment_count
        FROM
            Posts p
        INNER JOIN
            Member m
        ON
            p.member_id = m.member_id
        LEFT JOIN
            Comments c 
        ON 
            p.post_id = c.post_id
        WHERE
            post_sport = #{post_sport}
        GROUP BY
            p.post_id    
    </select>

    <!-- 게시글 검색  제목/내용/해시태그 -->
    <select id="postSelectTCH" parameterType="String" resultType="com.multipjt.multi_pjt.community.domain.posts.PostResponseDTO">
        SELECT 
            p.post_id,
            post_title,
            post_contents,
            post_sport,
            post_sports_keyword,
            post_like_counts,
            post_views,
            p.member_id,
            m.nickname,
            post_date,
            COUNT(c.comments_id) AS comment_count
        FROM
            Posts p
        INNER JOIN
            Member m
        ON
            p.member_id = m.member_id
        LEFT JOIN
            Comments c 
        ON 
            p.post_id = c.post_id
        WHERE
            post_title LIKE CONCAT( '%', #{keyword}, '%' )
            OR
            post_contents LIKE CONCAT( '%', #{keyword}, '%' )
            OR
            post_hashtag LIKE CONCAT( '%', #{keyword}, '%' )
        GROUP BY
            p.post_id 
    </select>


    <!-- 전체 게시글 조회 -->
    <select id="postAllSelect"  resultType="com.multipjt.multi_pjt.community.domain.posts.PostResponseDTO">
        SELECT 
            p.post_title AS post_title,
            p.post_sport AS post_sport,
            p.post_date AS post_date,
            p.post_sports_keyword AS sport_keyword,
            p.post_like_counts AS post_like_count,
            p.post_views AS post_views,
            COUNT(c.comments_id) AS comment_count,
            m.nickname AS nickname,
            m.member_id AS member_id
        FROM 
            Posts p
        LEFT JOIN 
            Comments c ON p.post_id = c.post_id
        JOIN 
            Member m ON p.member_id = m.member_id
        GROUP BY 
            p.post_id, p.post_title, p.post_sport, p.post_sports_keyword, 
            p.post_like_counts, p.post_views, m.nickname
        ORDER BY 
            p.post_date DESC
      
    </select>


    <resultMap id="PostWithCommentsResultMap" type="com.multipjt.multi_pjt.community.domain.posts.PostResponseDTO">
        <!-- 게시글 정보 매핑 -->
        <id property="post_id" column="post_id"/>
        <result property="post_title" column="post_title"/>
        <result property="post_contents" column="post_contents"/>
        <result property="post_sport" column="post_sport"/>
        <result property="post_sports_keyword" column="post_sports_keyword"/>
        <result property="post_date" column="post_date"/>
        <result property="post_modify_date" column="post_modify_date"/>
        <result property="post_like_counts" column="post_like_count"/>
        <result property="post_views" column="post_views"/>
        <result property="post_img1" column="post_img1"/>
        <result property="post_img2" column="post_img2"/>
        <result property="post_nickname" column="post_nickname"/>  <!-- 게시글 작성자 닉네임 -->
        <result property="member_id" column="post_member_id"/>  <!-- 게시글 작성자의 member_id -->

        <!-- 댓글 목록 매핑 -->
        <collection property="comments" ofType="com.multipjt.multi_pjt.community.domain.comments.CommentResponseDTO">
            <id property="comments_id" column="comments_id"/>
            <result property="comments_contents" column="comments_contents"/>
            <result property="c_nickname" column="c_nickname"/>  <!-- 댓글 작성자 닉네임 -->
            <result property="member_id" column="comment_member_id"/>  <!-- 댓글 작성자의 member_id -->
        </collection>
    </resultMap>

    <select id="postDetailSelect" resultMap="PostWithCommentsResultMap">
        SELECT 
            p.post_id AS post_id, 
            p.post_title AS post_title, 
            p.post_contents AS post_contents, 
            p.post_sport AS post_sport, 
            p.post_sports_keyword AS post_sports_keyword, 
            p.post_date AS post_date, 
            p.post_modify_date AS post_modify_date, 
            p.post_like_counts AS post_like_count, 
            p.post_views AS post_views, 
            p.post_img1 AS post_img1,
            p.post_img2 AS post_img2,
            m.nickname AS post_nickname,  
            m.member_id AS post_member_id,  
            c.comments_id AS comments_id, 
            c.comments_contents AS comments_contents, 
            c.member_id AS comment_member_id,  
            cm.nickname AS c_nickname  
        FROM 
            Posts p
        LEFT JOIN 
            Comments c ON p.post_id = c.post_id
        LEFT JOIN 
            Member m ON p.member_id = m.member_id  
        LEFT JOIN 
            Member cm ON c.member_id = cm.member_id  
        WHERE 
            p.post_id = #{post_id} 
        ORDER BY 
            p.post_date DESC
    </select>

  



</mapper>